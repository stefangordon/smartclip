[build-system]
requires = ["hatchling>=1.25", "hatch-vcs>=0.4"]
build-backend = "hatchling.build"

[project]
name = "smartclip"
description = "Adaptive gradient clipping for PyTorch, TensorFlow, and JAX"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
authors = [
  { name = "SmartClip Maintainers" },
]
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Typing :: Typed",
]
dependencies = []
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/your-org/smartclip"
Issues = "https://github.com/your-org/smartclip/issues"

[project.optional-dependencies]
torch = [
  "pytorch-lightning>=2.3,<3",
  "transformers>=4.42,<5",
]
tf = []
jax = [
  "flax>=0.8",
  "optax>=0.2",
]
bench = [
  "matplotlib>=3.8",
  "cycler>=0.12",
  "python-dateutil>=2.8",
  "kiwisolver==1.4.7",
]
test = [
  "pytest>=8",
  "pytest-cov>=5",
  "hypothesis>=6",
  "pytest-xdist>=3",
  "pytest-randomly>=3",
  "pytest-timeout>=2",
  "numpy>=1.26",
]
dev = [
  "ruff>=0.6",
  "mypy>=1.10",
  "types-setuptools",
  "pre-commit>=3.7",
  "build>=1.2",
]
docs = [
  "mkdocs>=1.6",
  "mkdocs-material>=9.5",
  "mkdocstrings[python]>=0.25",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
include = [
  "smartclip",
  "tests",
  "README.md",
  "LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["smartclip"]

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E402", "E501"]

[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
disallow_any_generics = true
warn_redundant_casts = true
warn_return_any = true
no_implicit_optional = true
pretty = true

[tool.pytest.ini_options]
addopts = "-q --maxfail=1 --disable-warnings"
testpaths = ["tests"]
markers = [
  "integration: marks tests that require real framework dependencies",
]


